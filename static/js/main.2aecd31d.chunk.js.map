{"version":3,"sources":["BooksAPI.js","BookCard.js","SearchResults.js","SearchInput.js","Navigation.js","Shelf.js","App.js","serviceWorker.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","useStyles","makeStyles","theme","card","maxWidth","textAlign","margin","cardContent","backgroundColor","media","maxHeight","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","BookCard","classes","useState","expanded","setExpanded","Card","className","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","root","flexGrow","spacing","marginTop","SearchResults","Grid","container","justify","item","xs","sm","lg","search","position","borderRadius","shape","fade","palette","common","white","height","width","breakpoints","up","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","SearchInput","InputBase","placeholder","input","inputProps","marginBottom","Navigation","exact","path","render","AppBar","Toolbar","noWrap","to","Fab","Shelf","FormRow","Fragment","createMuiTheme","type","primary","main","contrastText","secondary","BooksApp","console","log","fetch","then","res","json","data","books","ThemeProvider","CssBaseline","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2aecd31d.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\n\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, {headers})\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, {headers})\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({shelf})\r\n  }).then(res => res.json());\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({query})\r\n  }).then(res => res.json())\r\n    .then(data => data.books);\r\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Collapse,\n  Fab,\n  IconButton\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n    textAlign: 'left',\n    margin: 'auto',\n\n  },\n  cardContent: {\n    backgroundColor: 'rgba(33,33,33,0.9)'\n  },\n  media: {\n    maxHeight: 350,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    backgroundColor: '#80CBC4',\n    \"&:hover\": { backgroundColor: \"#598e89\" },\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n    backgroundColor: '#80CBC4',\n    \"&:hover\": { backgroundColor: \"#598e89\" }\n  },\n}));\n\nconst BookCard = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image=\"http://books.google.com/books/content?id=nggnmAEACAAJ&printsec=frontcover&img=1&zoom=10&source=gbs_api\"\n        title=\"The Linux Command Line\"\n      >\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            The Linux Command Line\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            William E. Shotts, Jr.\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.cardContent} disableSpacing>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon/>\n          </IconButton>\n        </CardActions>\n      </CardMedia>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default BookCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BookCard from \"./BookCard\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  spacing: {\n    marginTop: 50,\n  }\n}));\n\nconst SearchResults = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"space-around\" className={classes.spacing}>\n        <Grid container item xs={12} spacing={5}>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  )\n};\n\nexport default SearchResults;\n","import React, {Component} from 'react';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    margin: 'auto',\n    maxWidth: 600,\n    height: 55,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(8),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '80%',\n    height: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 1),\n    transition: theme.transitions.create('width')\n  },\n}));\n\nconst SearchInput = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon/>\n      </div>\n      <InputBase\n        placeholder=\"Search books...\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{'aria-label': 'search'}}\n      />\n    </div>\n  )\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Route} from 'react-router-dom';\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: '50px'\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navigation = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Route exact path='/' render={() => (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              MY BOOKSHELF\n            </Typography>\n            <Link to=\"/search\">\n              <Fab color=\"secondary\" aria-label=\"add\">\n                <AddIcon/>\n              </Fab>\n            </Link>\n          </Toolbar>\n        </AppBar>\n      )}/>\n      <Route exact path='/search' render={() => (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              SEARCH RESULTS\n            </Typography>\n            <Link to=\"/\">\n              <Fab color=\"secondary\" aria-label=\"back\">\n                <ArrowBackIcon/>\n              </Fab>\n            </Link>\n          </Toolbar>\n        </AppBar>\n      )}/>\n    </div>\n  )\n};\n\nexport default Navigation;\n  ","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BookCard from \"./BookCard\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nconst Shelf = () => {\n  const classes = useStyles();\n\n    const FormRow = () => {\n      return (\n        <React.Fragment>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n          <Grid item xs={12} sm={6} lg={3}>\n            <BookCard/>\n          </Grid>\n        </React.Fragment>\n      )\n    };\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={5} justify=\"space-around\">\n          <Grid container item xs={12} spacing={5}>\n            <FormRow/>\n          </Grid>\n          <Grid container item xs={12} spacing={5}>\n            <FormRow/>\n          </Grid>\n          <Grid container item xs={12} spacing={5}>\n            <FormRow/>\n          </Grid>\n        </Grid>\n      </div>\n    )\n};\n\nexport default Shelf;\n","import React, {Component} from 'react';\nimport * as BooksAPI from './BooksAPI'\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {createMuiTheme, CssBaseline} from \"@material-ui/core\";\nimport {Route} from 'react-router-dom';\nimport SearchResults from \"./SearchResults\";\nimport SearchInput from \"./SearchInput\";\nimport Navigation from \"./Navigation\";\nimport Shelf from \"./Shelf\";\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: '#212121',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#009688',\n      contrastText: '#fff',\n    }\n  }\n});\n\nclass BooksApp extends Component {\n  render() {\n    console.log(BooksAPI.getAll());\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline/>\n          <Navigation/>\n          <Route exact path='/' render={() => (\n            <Shelf/>\n          )}/>\n          <Route exact path='/search' render={() => (\n            <>\n              <SearchInput/>\n              <SearchResults/>\n            </>\n          )}/>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}